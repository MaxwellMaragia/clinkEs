
import com.formdev.flatlaf.FlatDarkLaf;
import java.awt.FontFormatException;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import org.json.JSONArray;
import org.json.JSONObject;


public class Login extends javax.swing.JFrame {
    
    BaseClass bc = new BaseClass();
     String dbEmail = null;
    String dbExpiry = null;
    String dbKey = null;
    /**
     * Creates new form auth
     */
    public Login() throws FontFormatException, IOException {
        
        try {
            UIManager.setLookAndFeel( new FlatDarkLaf() );
        } catch( Exception ex ) {
            System.err.println( "Failed to initialize LaF" );
        }
        
        initComponents();
        authIndicator.setVisible(false);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo.png")));
        setLocationRelativeTo(null);
        setResizable(false);
        
        setTitle(bc.title());
       // bc.setFont();
        version.setText(bc.version());
        

        
    }
  
    
  
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        version = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        version1 = new javax.swing.JLabel();
        emailFieldLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        authIndicator = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(1, 22, 39));
        jPanel1.setMaximumSize(new java.awt.Dimension(447, 399));
        jPanel1.setMinimumSize(new java.awt.Dimension(447, 399));

        title.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setText("ClinkES - EssayShark Bot");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home screen.png"))); // NOI18N

        version.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        version.setForeground(new java.awt.Color(174, 176, 178));
        version.setText("Version 2020.2");

        emailField.setBackground(new java.awt.Color(1, 22, 39));
        emailField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        emailField.setForeground(new java.awt.Color(174, 176, 178));
        emailField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(174, 176, 178)));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/customlogin.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        version1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        version1.setForeground(new java.awt.Color(174, 176, 178));
        version1.setText("Password");

        emailFieldLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        emailFieldLabel.setForeground(new java.awt.Color(174, 176, 178));
        emailFieldLabel.setText("Email address");

        passwordField.setBackground(new java.awt.Color(1, 22, 39));
        passwordField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        passwordField.setForeground(new java.awt.Color(174, 176, 178));
        passwordField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(174, 176, 178)));

        authIndicator.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        authIndicator.setForeground(new java.awt.Color(174, 176, 178));
        authIndicator.setText("Logging in....................");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(version))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(title))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(emailField, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(authIndicator))
                            .addComponent(version1)
                            .addComponent(emailFieldLabel)
                            .addComponent(passwordField))))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(version)
                .addGap(25, 25, 25)
                .addComponent(emailFieldLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(version1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(authIndicator)))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jMenu1.setText("Menu");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem2.setText("Home");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem4.setText("Exit");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        String email = emailField.getText();
        String password = passwordField.getText();
        authIndicator.setVisible(true);
        if (email.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all fields", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else if (!BaseClass.isValid(email)) {
            JOptionPane.showMessageDialog(this, "Invalid email", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            String activationCode="";
            try {
                activationCode = BaseClass.readFile("activation.txt");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (activationCode.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Activation code missing, please update settings", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                

                try {
                    URL url = new URL("http://es.clink.co.ke/getExpiry.php?act=" + activationCode);
                    HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();
                    httpURLConnection.setRequestMethod("GET");
                    
                    
                    
                    String line = "";
                    InputStreamReader inputStreamReader = new InputStreamReader(httpURLConnection.getInputStream());
                    BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
                    StringBuilder response = new StringBuilder();
                    while ((line = bufferedReader.readLine()) != null) {
                        response.append(line);
                    }
                    bufferedReader.close();

                    //adding square brackets t0 make a valid json array
                    String datas = "[" + response.toString() + "]";
                    JSONArray jsonArray = new JSONArray(datas);
                    JSONObject jsonObject1 = jsonArray.getJSONObject(0);

                    int status = jsonObject1.getInt("status");

                    if (status == 1) {

                        dbExpiry = jsonObject1.getString("exp");

                    } else {
                        JOptionPane.showMessageDialog(null, "Your account is not registered with clink");
                    }

                    int remaining = BaseClass.activationStatus(dbExpiry);

                    //Boolean compare = email.equals(dbEmail);
                    Boolean compare = true;

                    if (compare == true && remaining > 0) {
                        JOptionPane.showMessageDialog(null, "Subscription is active,Expiry on" + dbExpiry + ". proceed...");

                        //new clinkHome(dbEmail, dbKey, dbExpiry,pass).setVisible(true);
                        authIndicator.setVisible(true);
                        bot.login(email, password, activationCode);
                        
                        
                    } else if (compare = true && remaining < 1) {
                        JOptionPane.showMessageDialog(null, "Your Activation EXPIRED!");
                    }
                } catch (MalformedURLException ex) {
                    Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ParseException ex) {
                    Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                }



                } 
            }
        
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed

        System.exit(0);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        try {
           
            dispose();
            Home home = new Home();
            home.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FontFormatException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel authIndicator;
    private javax.swing.JTextField emailField;
    private javax.swing.JLabel emailFieldLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel title;
    private javax.swing.JLabel version;
    private javax.swing.JLabel version1;
    // End of variables declaration//GEN-END:variables
}
